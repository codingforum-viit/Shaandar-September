#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <bits/stdc++.h>
using namespace std;

int optimization(int a[],int b[],int n){
    map<int,int> mp;
    for(int i=0;i<n;i++){  // a={1,2,1,3,3} b={3,4,2, 2, 4}  // i=0,j=0,k=0  ...n-1
        mp[a[i]]= max(mp[a[i]],b[i]);// 1->3  2->4  3->4
    }
    n= mp.size();// n=nos of keys in map n=2         
    int i=0;
    vector<int> v(n);
    int res=0;
    if(n>2){
        for(map<int,int>::iterator it= mp.begin();it!=mp.end();it++,i++){
            v[i]= it -> second;//v[0]=3 ,v[1]=4 v[2]=4
        }
        sort(v.begin(),v.end());  
        res= v[n-1]+v[n-2]+v[n-3];//
    }
    return res;
}
void solve(){
    int n;
    cin>>n;
    int a[n];
    int b[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    for(int i=0;i<n;i++){
        cin>>b[i];
    }
    int res= optimization(a,b,n);
    cout<<res<<"\n";
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}